{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInput","ev","preventDefault","inputName","currentTarget","inputValue","value","setState","handleNewContact","props","userInput","reset","nameUid","shortid","generate","numberUid","className","styles","container","form","onSubmit","this","paragr","label","htmlFor","id","type","placeholder","onChange","React","Component","Filter","filter","handleFilterInput","ContactList","list","contacts","map","contact","button","onClick","handleDelete","App","addContact","data","find","alert","concat","console","log","event","contactToDelete","prevState","getFilteredContact","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b27d3e34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3Ubdd\",\"list\":\"ContactList_list__YM4ns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3K3Go\"};","import React from \"react\";\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component{\r\n\r\n    state = {\r\n        name: '',\r\n        number : ''\r\n    }\r\n\r\n    handleInput = ev =>{\r\n        ev.preventDefault();\r\n        const inputName = ev.currentTarget.name;\r\n        const inputValue = ev.currentTarget.value;\r\n        this.setState ({\r\n            [inputName] : inputValue\r\n        });\r\n      }\r\n\r\n      handleNewContact = ev => {\r\n          ev.preventDefault();\r\n          this.props.userInput(this.state);\r\n          this.reset();\r\n      }\r\n\r\n      reset = () => {\r\n        this.setState({\r\n          name : '',\r\n          number : ''\r\n        });\r\n      };\r\n\r\n    render(){\r\n        const nameUid = shortid.generate();\r\n        const numberUid = shortid.generate();\r\n\r\n        return(\r\n            <div className = {styles.container}>\r\n                <form className ={styles.form} onSubmit={this.handleNewContact}>\r\n                    <p className = {styles.paragr}>\r\n                        <label className = {styles.label}\r\n                     htmlFor={nameUid}>Name</label>\r\n                        <br/><input\r\n                        id = {nameUid}\r\n                        type =\"text\"\r\n                        name = \"name\"\r\n                        placeholder= \"Enter contact name here\"\r\n                        value = {this.state.name}\r\n                        onChange ={this.handleInput}/>\r\n                        </p>\r\n          \r\n                    <p><label htmlFor={numberUid}>Number</label>\r\n                        <br/><input\r\n                        id = {numberUid} \r\n                        type =\"text\"\r\n                        name = \"number\"\r\n                        placeholder= \"Format: +38011-111-11-11\"\r\n                        value = {this.state.number}\r\n                        onChange ={this.handleInput}/> \r\n                        </p>\r\n          \r\n                    <button type=\"submit\">Add contact</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends React.Component{\r\n\r\n    static propTypes = {\r\nfilter : PropTypes.string ,\r\nhandleFilterInput : PropTypes.func\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = {styles.filter}>\r\n                <p>You can find a contact by name:</p>\r\n                    <label>\r\n                        <input \r\n                        type=\"text\" \r\n                        name=\"filter\"\r\n                        value={this.props.filter}\r\n                        onChange={this.props.handleFilterInput}/>\r\n                    </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Filter;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css'\r\n\r\nclass ContactList extends React.Component{\r\n    static propTypes = {\r\ncontacts : PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id : PropTypes.string.isRequired,\r\n        name : PropTypes.string,\r\n        number : PropTypes.string\r\n    })\r\n),\r\nhandleDelete : PropTypes.func\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = {styles.list}>\r\n                <ul type = \"none\">\r\n                    {this.props.contacts.map(contact =>{\r\n                    return(\r\n                        <div key = {contact.id}>\r\n                            <li>{contact.name} \r\n                            : {contact.number}\r\n                            <button className = {styles.button} name = \"contact\" value={contact.name} \r\n                            onClick = {this.props.handleDelete}>Delete</button>\r\n                            </li>\r\n                        </div>);\r\n                    })}  \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\nimport  styles from './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nclass App extends Component {\n\n  state = {\n    filter : '',\n    contacts : [\n    {id: 'id-1', name: 'My test Name', number: '111-22-33'},\n    ]\n  };\n\n  addContact = data => {\n    const uid = shortid.generate();\n    const contact = {\n      id : uid,\n      name : data.name,\n      number : data.number\n    }\n\n    if(this.state.contacts.find(contact => contact.name === data.name)){\n        alert(`${data.name} already exists in your phonebook`);\n    }else{\n      this.setState({\n        contacts : this.state.contacts.concat([contact])\n      });\n    }\n  }\n\n  handleFilterInput = ev =>{\n    ev.preventDefault();\n    const inputName = ev.currentTarget.name;\n    const inputValue = ev.currentTarget.value;\n    console.log(inputValue);\n    this.setState({\n      [inputName] : inputValue\n    });\n  }\n\n  handleDelete = event => {\n    const contactToDelete = event.currentTarget.value;\n    console.log(contactToDelete);\n    this.setState(prevState => \n      ({contacts: prevState.contacts.filter(contact => contact.name !== contactToDelete)}));\n  }\n\n    getFilteredContact = () => {\n      const {filter, contacts} = this.state;\n      console.log(this.state)\n      if(filter){\n        return contacts.filter\n          (contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n      }else {\n      return contacts;\n      }\n    }\n\n  render(){\nconst contacts = this.getFilteredContact();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm userInput = {this.addContact}/>\n        <h2>Contacts : </h2>\n        <Filter filter = {this.state.filter} handleFilterInput={this.handleFilterInput}/>\n        <ContactList contacts = {contacts} handleDelete = {this.handleDelete}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__R_MWt\",\"form\":\"ContactForm_form__3WC-M\",\"paragr\":\"ContactForm_paragr__jUjQ0\",\"label\":\"ContactForm_label__jlnQu\"};"],"sourceRoot":""}